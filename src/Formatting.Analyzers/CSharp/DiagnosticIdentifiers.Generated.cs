// Copyright (c) .NET Foundation and Contributors. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

// <auto-generated>

using System;

namespace Roslynator.Formatting.CSharp
{
    public static partial class DiagnosticIdentifiers
    {
        public const string AddBlankLineAfterEmbeddedStatement = "RCS0001";
        public const string AddBlankLineAfterRegionDirective = "RCS0002";
        public const string AddBlankLineAfterUsingDirectiveList = "RCS0003";
        public const string AddBlankLineBeforeEndRegionDirective = "RCS0005";
        public const string AddBlankLineBeforeUsingDirectiveList = "RCS0006";
        public const string AddBlankLineBetweenAccessors = "RCS0007";
        public const string AddBlankLineBetweenClosingBraceAndNextStatement = "RCS0008";
        public const string AddBlankLineBetweenDeclarationAndDocumentationComment = "RCS0009";
        public const string AddBlankLineBetweenDeclarations = "RCS0010";
        public const string BlankLineBetweenSingleLineAccessors = "RCS0011";
        public const string AddBlankLineBetweenSingleLineDeclarations = "RCS0012";
        public const string AddBlankLineBetweenSingleLineDeclarationsOfDifferentKind = "RCS0013";
        public const string AddBlankLineBetweenSwitchSections = "RCS0014";
        public const string BlankLineBetweenUsingDirectives = "RCS0015";
        public const string PutAttributeListOnItsOwnLine = "RCS0016";
        public const string FormatAccessorBraces = "RCS0020";
        public const string FormatBlockBraces = "RCS0021";
        public const string AddNewLineAfterOpeningBraceOfEmptyBlock = "RCS0022";
        public const string FormatTypeDeclarationBraces = "RCS0023";
        public const string AddNewLineAfterSwitchLabel = "RCS0024";
        public const string PutFullAccessorOnItsOwnLine = "RCS0025";
        public const string PlaceNewLineAfterOrBeforeBinaryOperator = "RCS0027";
        public const string PlaceNewLineAfterOrBeforeConditionalOperator = "RCS0028";
        public const string PutConstructorInitializerOnItsOwnLine = "RCS0029";
        public const string PutEmbeddedStatementOnItsOwnLine = "RCS0030";
        public const string PutEnumMemberOnItsOwnLine = "RCS0031";
        public const string PlaceNewLineAfterOrBeforeArrowToken = "RCS0032";
        public const string PutStatementOnItsOwnLine = "RCS0033";
        public const string PutTypeParameterConstraintOnItsOwnLine = "RCS0034";
        public const string RemoveBlankLineBetweenSingleLineDeclarationsOfSameKind = "RCS0036";
        public const string RemoveBlankLineBetweenUsingDirectivesWithSameRootNamespace = "RCS0038";
        public const string RemoveNewLineBeforeBaseList = "RCS0039";
        public const string RemoveNewLineBetweenIfKeywordAndElseKeyword = "RCS0041";
        public const string PutAutoAccessorsOnSingleLine = "RCS0042";
        public const string FormatAccessorBracesOnSingleLineWhenExpressionIsOnSingleLine = "RCS0043";
        public const string UseCarriageReturnAndLinefeedAsNewLine = "RCS0044";
        public const string UseLinefeedAsNewLine = "RCS0045";
        public const string UseSpacesInsteadOfTab = "RCS0046";
        public const string WrapAndIndentEachNodeInList = "RCS0047";
        public const string PutInitializerOnSingleLine = "RCS0048";
        public const string AddBlankLineAfterTopComment = "RCS0049";
        public const string AddBlankLineBeforeTopDeclaration = "RCS0050";
        public const string AddOrRemoveNewLineBeforeWhileInDoStatement = "RCS0051";
        public const string PlaceNewLineAfterOrBeforeEqualsToken = "RCS0052";
        public const string FixFormattingOfList = "RCS0053";
        public const string FixFormattingOfCallChain = "RCS0054";
        public const string FixFormattingOfBinaryExpressionChain = "RCS0055";
        public const string LineIsTooLong = "RCS0056";
        public const string NormalizeWhitespaceAtBeginningOfFile = "RCS0057";
        public const string NormalizeWhitespaceAtEndOfFile = "RCS0058";
        public const string PlaceNewLineAfterOrBeforeNullConditionalOperator = "RCS0059";
        public const string BlankLineAfterFileScopedNamespaceDeclaration = "RCS0060";
        public const string BlankLineBetweenSwitchSections = "RCS0061";
        public const string PutExpressionBodyOnItsOwnLine = "RCS0062";
    }
}